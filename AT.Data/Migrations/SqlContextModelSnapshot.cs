// <auto-generated />
using System;
using AT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AT.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AT.Domain.Log", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityColumn();

                b.Property<string>("Action")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("CreateDate")
                    .HasColumnType("datetime2");

                b.Property<string>("DetailedMessage")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Message")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Type")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Logs");
            });

            modelBuilder.Entity("AT.Domain.Order", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityColumn();

                b.Property<decimal>("Amount")
                    .HasColumnType("decimal(18,5)");

                b.Property<decimal>("AmountOriginal")
                    .HasColumnType("decimal(18,5)");

                b.Property<long?>("ClientOrderId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("CreateDate")
                    .HasColumnType("datetime2");

                b.Property<decimal?>("CurrentMarketPrice")
                    .HasColumnType("decimal(18,5)");

                b.Property<DateTime?>("ExecutedDate")
                    .HasColumnType("datetime2");

                b.Property<long>("OrderId")
                    .HasColumnType("bigint");

                b.Property<int>("OrderLevel")
                    .HasColumnType("int");

                b.Property<decimal?>("PreviousOrderExecutedPrice")
                    .HasColumnType("decimal(18,5)");

                b.Property<long?>("PreviousOrderId")
                    .HasColumnType("bigint");

                b.Property<decimal?>("PreviousOrderProfitRatio")
                    .HasColumnType("decimal(18,5)");

                b.Property<decimal?>("PreviousOrderProfitRatioToCurrentPrice")
                    .HasColumnType("decimal(18,5)");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,5)");

                b.Property<decimal?>("PriceAverage")
                    .HasColumnType("decimal(18,5)");

                b.Property<decimal?>("ProfitRatio")
                    .HasColumnType("decimal(18,5)");

                b.Property<string>("Side")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Source")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Symbol")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Type")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.HasIndex("OrderId")
                    .IsUnique();

                b.HasIndex("PreviousOrderId")
                    .IsUnique()
                    .HasFilter("[PreviousOrderId] IS NOT NULL");

                b.ToTable("Orders");
            });

            modelBuilder.Entity("AT.Domain.Pair", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityColumn();

                b.Property<DateTime>("CreateDate")
                    .HasColumnType("datetime2");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<DateTime?>("LastUpdateDate")
                    .HasColumnType("datetime2");

                b.Property<int>("MaxOrderLevel")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.Property<decimal>("OrderAmount")
                    .HasColumnType("decimal(18,5)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("Pairs");
            });

            modelBuilder.Entity("AT.Domain.PairHistory", b =>
            {
                b.Property<long>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bigint")
                    .UseIdentityColumn();

                b.Property<int>("ActiveHours")
                    .HasColumnType("int");

                b.Property<DateTime?>("EndDate")
                    .HasColumnType("datetime2");

                b.Property<int>("ExecutedBuyOrderCount")
                    .HasColumnType("int");

                b.Property<int>("ExecutedSellOrderCount")
                    .HasColumnType("int");

                b.Property<bool>("IsActive")
                    .HasColumnType("bit");

                b.Property<decimal>("OrderAmount")
                    .HasColumnType("decimal(18,5)");

                b.Property<int>("OrderLevel")
                    .HasColumnType("int");

                b.Property<long>("PairId")
                    .HasColumnType("bigint");

                b.Property<DateTime>("StartDate")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("PairId");

                b.ToTable("PairHistory");
            });

            modelBuilder.Entity("AT.Domain.Order", b =>
            {
                b.HasOne("AT.Domain.Order", "PreviousOrder")
                    .WithOne()
                    .HasForeignKey("AT.Domain.Order", "PreviousOrderId");

                b.Navigation("PreviousOrder");
            });

            modelBuilder.Entity("AT.Domain.PairHistory", b =>
            {
                b.HasOne("AT.Domain.Pair", "Pair")
                    .WithMany("PairHistory")
                    .HasForeignKey("PairId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Pair");
            });

            modelBuilder.Entity("AT.Domain.Pair", b =>
            {
                b.Navigation("PairHistory");
            });
#pragma warning restore 612, 618
        }
    }
}
